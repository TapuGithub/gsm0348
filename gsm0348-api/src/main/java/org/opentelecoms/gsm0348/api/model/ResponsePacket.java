//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-833 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.09.09 at 04:14:20 PM MSD 
//

package org.opentelecoms.gsm0348.api.model;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;

import org.opentelecoms.gsm0348.api.Util;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ResponsePacket", propOrder = {
    "header"
})
public class ResponsePacket
    extends Packet
{

    @XmlElement(name = "Header", required = true)
    protected ResponsePacketHeader header;

    /**
     * Gets the value of the header property.
     * 
     * @return
     *     possible object is
     *     {@link ResponsePacketHeader }
     *     
     */
    public ResponsePacketHeader getHeader() {
        return header;
    }

    /**
     * Sets the value of the header property.
     * 
     * @param value
     *     allowed object is
     *     {@link ResponsePacketHeader }
     *     
     */
    public void setHeader(ResponsePacketHeader value) {
        this.header = value;
    }

	@Override
	public int hashCode()
	{
		final int prime = 31;
		int result = super.hashCode();
		result = prime * result + ((header == null) ? 0 : header.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (this == obj)
			return true;
		if (!super.equals(obj))
			return false;
		if (!(obj instanceof ResponsePacket))
			return false;
		ResponsePacket other = (ResponsePacket) obj;
		if (header == null)
		{
			if (other.header != null)
				return false;
		}
		else if (!header.equals(other.header))
			return false;
		return true;
	}

	@Override
	public String toString()
	{
		StringBuilder builder = new StringBuilder();
		builder.append("ResponsePacket [header=");
		builder.append(header);
		builder.append(", data=");
		builder.append(Util.toHexString(data));
		builder.append("]");
		return builder.toString();
	}

}
